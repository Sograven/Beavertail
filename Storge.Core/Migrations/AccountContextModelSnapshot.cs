// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Storge.Core.Data.Contexts;

#nullable disable

namespace Storge.Core.Migrations
{
    [DbContext(typeof(AccountContext))]
    partial class AccountContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Storge.Core.Data.Models.User.Account", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactsID")
                        .HasColumnType("TEXT");

                    b.Property<int>("Group")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PassportID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ContactsID");

                    b.HasIndex("PassportID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Storge.Core.Data.Models.User.Contacts", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<long>("TelegramID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Storge.Core.Data.Models.User.Passport", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Series")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Passport");
                });

            modelBuilder.Entity("Storge.Core.Data.Models.User.Account", b =>
                {
                    b.HasOne("Storge.Core.Data.Models.User.Contacts", "Contacts")
                        .WithMany()
                        .HasForeignKey("ContactsID");

                    b.HasOne("Storge.Core.Data.Models.User.Passport", "Passport")
                        .WithMany()
                        .HasForeignKey("PassportID");

                    b.Navigation("Contacts");

                    b.Navigation("Passport");
                });
#pragma warning restore 612, 618
        }
    }
}
